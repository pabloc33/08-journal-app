{"version":3,"sources":["firebase/firebase-config.js","notes/NotesAppBar.js","notes/NoteScreen.js","types/types.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","NotesAppBar","className","NoteScreen","type","placeholder","autoComplete","src","alt","types","setError","err","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","Swal","fire","message","logout","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","value","key","Sidebar","useDispatch","onClick","a","signOut","JournalScreen","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","LoginScreen","loading","useSelector","state","ui","formValues","onSubmit","preventDefault","onChange","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70bae1fb.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDKEl-oQ0OcbkS9-3UDbhWqkjZryZvsYLU\",\r\n  authDomain: \"react-app-cursos-98331.firebaseapp.com\",\r\n  databaseURL: \"https://react-app-cursos-98331.firebaseio.com\",\r\n  projectId: \"react-app-cursos-98331\",\r\n  storageBucket: \"react-app-cursos-98331.appspot.com\",\r\n  messagingSenderId: \"841371962740\",\r\n  appId: \"1:841371962740:web:3ff2ee5582c11498a13021\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","import React from \"react\";\r\n\r\nexport const NotesAppBar = () => {\r\n  return (\r\n    <div className=\"notes__appbar\">\r\n      <samp>24 de septiembre de 2020</samp>\r\n\r\n      <div>\r\n        <button className=\"btn\">Picture</button>\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"btn\">Save</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { NotesAppBar } from \"./NotesAppBar\";\r\n\r\nexport const NoteScreen = () => {\r\n  return (\r\n    <div className=\"notes__main-content\">\r\n      <NotesAppBar />\r\n      <div className=\"notes__content\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Some awesome title\"\r\n          className=\"notes__title-input\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <textarea\r\n          placeholder=\"What happened today\"\r\n          className=\"notes__textarea\"\r\n        ></textarea>\r\n        <div className=\"notes__image\">\r\n          <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQcq99vXBrf_-HmmITpxpDQJCKbMPMUwDrY8A&usqp=CAU\"\r\n            alt=\"imagen\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const types = {\r\n  login: \"[Auth] Login\",\r\n  logout: \"[Auth] Logout\",\r\n\r\n  uiSetError: \"[UI] Set Error\",\r\n  uiRemoveError: \"[UI] Remove Error\",\r\n\r\n  uiStartLoading: \"[UI] Start loading\",\r\n  uiFinishLoading: \"[UI] Finish loading\",\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err,\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import Swal from \"sweetalert2\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n\r\n    // auth()\r\n    // signIn... email... password... (email,password)\r\n    //dispatch(login(123, \"Pedro\"));\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n\r\n        dispatch(finishLoading());\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        dispatch(finishLoading());\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: name });\r\n\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startGooglelogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n    uid,\r\n    displayName,\r\n  },\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: types.logout,\r\n});\r\n","import React from \"react\";\r\n\r\nexport const JournalEntry = () => {\r\n  return (\r\n    <div className=\"journal__entry pointer\">\r\n      <div\r\n        className=\"journal__entry-picture\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage:\r\n            \"url(https://i.pinimg.com/originals/67/54/78/675478c7dcc17f90ffa729387685615a.jpg)\",\r\n        }}\r\n      ></div>\r\n      <div className=\"journal__entry-body\">\r\n        <p className=\"journal__entry-title\">Un nuevo mundo</p>\r\n        <p className=\"journal__entry-content\">\r\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit.\r\n        </p>\r\n      </div>\r\n      <div className=\"journal__entry-date-box\">\r\n        <span>Monday</span>\r\n        <h4>28</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { JournalEntry } from \"./JournalEntry\";\r\n\r\nexport const JournalEntries = () => {\r\n  const entries = [1, 2, 3, 4, 5];\r\n\r\n  return (\r\n    <div className=\"journal__entries\">\r\n      {entries.map((value) => (\r\n        <JournalEntry key={value} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { JournalEntries } from \"./JournalEntries\";\r\n\r\nexport const Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <aside className=\"journal__sidebar\">\r\n      <div className=\"journal__sidebar-navbar\">\r\n        <h3 className=\"mt-5\">\r\n          <i className=\"far fa-moon\"></i>\r\n          <span> Lavonne!!</span>\r\n        </h3>\r\n\r\n        <button className=\"btn\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"journal__new-entry\">\r\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n        <p className=\"mt-5\">New entry</p>\r\n      </div>\r\n\r\n      <JournalEntries />\r\n    </aside>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { NoteScreen } from \"../../notes/NoteScreen\";\r\n//import { NothingSelected } from \"./NothingSelected\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nexport const JournalScreen = () => {\r\n  return (\r\n    <div className=\"journal__main-content\">\r\n      <Sidebar />\r\n\r\n      <main>\r\n        {/* <NothingSelected /> */}\r\n        <NoteScreen />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startGooglelogin, startLoginEmailPassword } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading } = useSelector((state) => state.ui);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"nando@gmail.com\",\r\n    password: \"123456\",\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGooglelogin = () => {\r\n    dispatch(startGooglelogin());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Login</h3>\r\n\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-block\"\r\n          disabled={loading}\r\n        >\r\n          Login\r\n        </button>\r\n\r\n        <div className=\"auth__social-networks\">\r\n          <p>Login with social networks</p>\r\n\r\n          <div className=\"google-btn\" onClick={handleGooglelogin}>\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <Link to=\"/auth/register\" className=\"link\">\r\n          Create new account\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from \"validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeError, setError } from \"../../actions/ui\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { msgError } = useSelector((state) => state.ui);\r\n\r\n  /*\r\n{\r\n\r\n  name: 'Hernando',\r\n  email: 'nando@gmail.com',\r\n  password: '123456',\r\n  password2: '123456'\r\n\r\n}\r\n\r\n// useForm\r\n\r\nconst handleRegister = (e) {}\r\n\r\n  */\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: \"Hernando\",\r\n    email: \"nando@gmail.com\",\r\n    password: \"123456\",\r\n    password2: \"123456\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(setError(\"Name is required\"));\r\n\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      dispatch(setError(\"Email is not valid\"));\r\n      return false;\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch(\r\n        setError(\r\n          \"Password should be at least 6 characters and match each other\"\r\n        )\r\n      );\r\n      return false;\r\n    }\r\n    dispatch(removeError());\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Register</h3>\r\n\r\n      <form onSubmit={handleRegister}>\r\n        {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm\"\r\n          name=\"password2\"\r\n          className=\"auth__input\"\r\n          value={password2}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\r\n          Register\r\n        </button>\r\n\r\n        <Link to=\"/auth/login\" className=\"link mt-5\">\r\n          Already registered?\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className=\"auth__main\">\r\n      <div className=\"auth__box-container\">\r\n        <Switch>\r\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n\r\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n\r\n      {/* \r\n      //ROUTER... nova... ni exact\r\n      path=\"/auth/login\"\r\n      component={LoginScreen}\r\n\r\n         path=\"/auth/register\"\r\n      component={RegisterScreen}\r\n\r\n      // Redirect to=\"/auth/register\"\r\n       */}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n  if (checking) {\r\n    return <h1>Espere...</h1>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            isAuthenticated={isLoggedIn}\r\n            path=\"/\"\r\n            component={JournalScreen}\r\n          />\r\n\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n      {/*Router: \r\n      path=/auth\r\n      NO es exact\r\n      component={AuthRouter}  */}\r\n\r\n      {/* Main Router: \r\n      exact\r\n      path=\"/\"\r\n      component={JournalScreen}  */}\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      };\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducer = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n/*  \r\n{\r\n  uid: 'klhahlhgahlkdfkhf',\r\n  name: 'Pablo'\r\n}\r\n\r\n*/\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n      };\r\n\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const JournalApp = () => {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <AppRouter />\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { JournalApp } from \"./JournalApp\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(<JournalApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}